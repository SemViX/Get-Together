from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from ..services import get_all_events, take_part_in_event, get_events_created_by_user, get_user_profile, delete_event, get_all_categories, get_event_by_category
from telegram.error import BadRequest

async def get_events(update:Update, context:ContextTypes.DEFAULT_TYPE):
    """–û—Ç—Ä–∏–º—É—î —Ç–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î –≤—Å—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ –ø–æ–¥—ñ—ó.

    Args:
        update (Update):–û–±'—î–∫—Ç –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥ Telegram, —â–æ –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.
        context (ContextTypes.DEFAULT_TYPE): –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞, —â–æ –¥–æ–∑–≤–æ–ª—è—î –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π —Ç–∞ –¥–∞–Ω–∏—Ö.
    Side Effects:
       - –í–∏–∫–ª–∏–∫–∞—î —Ñ—É–Ω–∫—Ü—ñ—é "get_all_events"
       - –Ø–∫—â–æ –ø–æ–¥—ñ–π –Ω–µ–º–∞, –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: "–ü–æ–¥—ñ–π –ø–æ–∫–∏ –Ω–µ–º–∞" 
       - –í–∏–∫–ª–∏–∫–∞—î "show_events" –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ–¥—ñ–π
    """
    events = await get_all_events()

    if not events:
        await update.message.reply_text("–ü–æ–¥—ñ–π –ø–æ–∫–∏ –Ω–µ–º–∞")
        return

    context.user_data['events'] = events
    context.user_data['event_index'] = 0 

    await show_events(update, context, events[0], 0)

async def get_created_events(update:Update, context:ContextTypes.DEFAULT_TYPE):
    """–û—Ç—Ä–∏–º—É—î —Ç–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î –≤—Å—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ –ø–æ–¥—ñ—ó, —Å—Ç–≤–æ—Ä–µ–Ω—ñ –ø–æ—Ç–æ—á–Ω–∏–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º.

    Args:
        update (Update):–û–±'—î–∫—Ç –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥ Telegram, —â–æ –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.
        context (ContextTypes.DEFAULT_TYPE): –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞, —â–æ –¥–æ–∑–≤–æ–ª—è—î –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π —Ç–∞ –¥–∞–Ω–∏—Ö.
    Side Effects:
        - –í–∏–∫–ª–∏–∫–∞—î —Ñ—É–Ω–∫—Ü—ñ—é `get_user_profile` –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
        - –í–∏–∫–ª–∏–∫–∞—î —Ñ—É–Ω–∫—Ü—ñ—é "get_events_created_by_user"
        - –Ø–∫—â–æ –ø–æ–¥—ñ–π –Ω–µ–º–∞, –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: "–ü–æ–¥—ñ–π –ø–æ–∫–∏ –Ω–µ–º–∞" 
        - –í–∏–∫–ª–∏–∫–∞—î "show_events" –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ–¥—ñ–π
    """
    user = await get_user_profile(update.effective_user.id)
    events = await get_events_created_by_user(user)

    if not events:
        await update.message.reply_text("–ü–æ–¥—ñ–π –ø–æ–∫–∏ –Ω–µ–º–∞")
        return

    context.user_data['events'] = events
    context.user_data['event_index'] = 0 

    await show_events(update, context, events[0], 0)


async def show_events(update:Update, context:ContextTypes.DEFAULT_TYPE, event, index):
    """–§–æ—Ä–º–∞—Ç—É—î —Ç–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É –ø–æ–¥—ñ—é
    Args:
        update (Update):–û–±'—î–∫—Ç –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥ Telegram, —â–æ –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.
        context (ContextTypes.DEFAULT_TYPE): –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞, —â–æ –¥–æ–∑–≤–æ–ª—è—î –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π —Ç–∞ –¥–∞–Ω–∏—Ö.
        event (Event): –û–±'—î–∫—Ç –ø–æ–¥—ñ—ó, —è–∫–∏–π –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥–æ–±—Ä–∞–∑–∏—Ç–∏.
        index (int): –ü–æ—Ç–æ—á–Ω–∏–π —ñ–Ω–¥–µ–∫—Å –ø–æ–¥—ñ—ó —É —Å–ø–∏—Å–∫—É –ø–æ–¥—ñ–π.
    Side Effects:
        - –§–æ—Ä–º–∞—Ç—É—î —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –¥–µ—Ç–∞–ª—è–º–∏ –ø–æ–¥—ñ—ó (–Ω–∞–∑–≤–∞, –æ–ø–∏—Å, –¥–∞—Ç–∞, –∞–¥—Ä–µ—Å–∞, –∫–∞—Ç–µ–≥–æ—Ä—ñ—è, –∞–≤—Ç–æ—Ä, —É—á–∞—Å–Ω–∏–∫–∏).
        - –°—Ç–≤–æ—Ä—é—î –∫–Ω–æ–ø–∫–∏ "‚¨ÖÔ∏è –ü–æ–ø–µ—Ä–µ–¥–Ω—è" —Ç–∞ "‚û°Ô∏è –ù–∞—Å—Ç—É–ø–Ω–∞"
        - –í–∏–∫–ª–∏–∫–∞—î —Ñ—É–Ω–∫—Ü—ñ—é `get_user_profile` –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ä–æ–ª—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
        - –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ —î –∞–≤—Ç–æ—Ä–æ–º, –¥–æ–¥–∞—î –∫–Ω–æ–ø–∫—É "–í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å!".
    """
    text = (
        f"üìå *–ù–∞–∑–≤–∞:* {event.title}\n"
        f"üìù *–û–ø–∏—Å:* {event.description}\n"
        f"üìÖ *–î–∞—Ç–∞ –ø–æ—á–∞—Ç–∫—É:* {event.start_time.strftime('%d.%m.%Y %H:%M')}\n"
        f"üìç *–ê–¥—Ä–µ—Å–∞:* {event.address}\n"
        f"üìÇ *–ö–∞—Ç–µ–≥–æ—Ä—ñ—è:* {event.category.name}\n"
        f"üë§ *–ê–≤—Ç–æ—Ä:* {event.creator.username}\n"
        f"üë• *–ö—ñ–ª—å–∫—ñ—Å—Ç—å —É—á–∞—Å–Ω–∏–∫—ñ–≤:* {event.participants.count()}"
    )

    keyboard = []
    if index > 0:
        keyboard.append(InlineKeyboardButton("‚¨ÖÔ∏è –ü–æ–ø–µ—Ä–µ–¥–Ω—è", callback_data="prev_event"))
    if index < len(context.user_data['events']) - 1:
        keyboard.append(InlineKeyboardButton("‚û°Ô∏è –ù–∞—Å—Ç—É–ø–Ω–∞", callback_data="next_event"))

    user = await get_user_profile(update.effective_user.id)

    if user.is_creator:
        reply_markup = InlineKeyboardMarkup([[InlineKeyboardButton("–†–µ–¥–∞–≥—É–≤—Ç–∏", callback_data="edit_event")], [InlineKeyboardButton("–í–∏–¥–∞–ª–∏—Ç–∏", callback_data="delete_event")], keyboard])
    else:
        reply_markup = InlineKeyboardMarkup([[InlineKeyboardButton("–í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å!", callback_data="take_part")], keyboard])

    if  update.message:
        await update.message.reply_text(text=text, reply_markup=reply_markup)
    else:
        try:
            await update.callback_query.edit_message_text(text=text, reply_markup=reply_markup)
        except BadRequest as e:
            if "Message is not modified" in str(e):
                pass
            else:
                raise

async def paginate_event(update:Update, context:ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–ª—è—î –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó ("–ü–æ–ø–µ—Ä–µ–¥–Ω—è" –∞–±–æ "–ù–∞—Å—Ç—É–ø–Ω–∞")
    Args:
        update (Update):–û–±'—î–∫—Ç –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥ Telegram, —â–æ –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.
        context (ContextTypes.DEFAULT_TYPE): –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞, —â–æ –¥–æ–∑–≤–æ–ª—è—î –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π —Ç–∞ –¥–∞–Ω–∏—Ö.
    Side Effects:
        - –û–Ω–æ–≤–ª—é—î `context.user_data['event_index']` –Ω–∞ –æ—Å–Ω–æ–≤—ñ –Ω–∞—Ç–∏—Å–Ω—É—Ç–æ—ó –∫–Ω–æ–ø–∫–∏.
        - –í–∏–∫–ª–∏–∫–∞—î `show_events` –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–æ–≤–æ—ó –ø–æ–¥—ñ—ó –∑–∞ –æ–Ω–æ–≤–ª–µ–Ω–∏–º —ñ–Ω–¥–µ–∫—Å–æ–º.
    """
    query = update.callback_query
    await query.answer()

    index = context.user_data.get('event_index', 0)
    events = context.user_data.get("events", [])

    if query.data == "prev_event":
        index -= 1
    elif query.data == "next_event":
        index += 1

    context.user_data['event_index'] = index

    await show_events(update=update, context=context, event=events[index], index=index)


async def take_part(update:Update, context:ContextTypes.DEFAULT_TYPE):
    """–î–æ–∑–≤–æ–ª—è—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ –≤–∑—è—Ç–∏ —É—á–∞—Å—Ç—å —É –ø–æ—Ç–æ—á–Ω—ñ–π –ø–æ–¥—ñ—ó.
    Args:
        update (Update):–û–±'—î–∫—Ç –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥ Telegram, —â–æ –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.
        context (ContextTypes.DEFAULT_TYPE): –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞, —â–æ –¥–æ–∑–≤–æ–ª—è—î –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π —Ç–∞ –¥–∞–Ω–∏—Ö.
    Side Effects:
        - –û—Ç—Ä–∏–º—É—î `user_id` –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ—Ç–æ—á–Ω–æ—ó –ø–æ–¥—ñ—ó.
        - –í–∏–∫–ª–∏–∫–∞—î –∑–æ–≤–Ω—ñ—à–Ω—é —Ñ—É–Ω–∫—Ü—ñ—é `take_part_in_event` –¥–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó —É—á–∞—Å—Ç—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
        - –û–Ω–æ–≤–ª—é—î —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –ø–æ–¥—ñ–π —É `context.user_data['events']` –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∞–∫—Ç—É–∞–ª—å–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —É—á–∞—Å–Ω–∏–∫—ñ–≤.
    """
    query = update.callback_query
    await query.answer()

    user_id = query.from_user.id
    index = context.user_data.get('event_index', 0)
    current_event = context.user_data.get("events")[index]

    await take_part_in_event(user_id=user_id, event_title=current_event.title)
    events = await get_all_events()
    context.user_data['events'] = events

    await query.message.reply_text('–í–∏ –≤–∑—è–ª–∏ —É—á–∞—Å—Ç—å –≤ —Ü—ñ–π –ø–æ–¥—ñ—ó')
    await show_events(update=update, context=context, event=events[index], index=index)

async def handle_delete_event(update:Update, context:ContextTypes.DEFAULT_TYPE):
    """–í–∏–¥–∞–ª—è—î –ø–æ–¥—ñ—é
    Args:
        update (Update):–û–±'—î–∫—Ç –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥ Telegram, —â–æ –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.
        context (ContextTypes.DEFAULT_TYPE): –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞, —â–æ –¥–æ–∑–≤–æ–ª—è—î –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π —Ç–∞ –¥–∞–Ω–∏—Ö.
    Side Effects:
        - –û—Ç—Ä–∏–º—É—î —ñ–Ω–¥–µ–∫—Å —Ç–∞ –æ–±'—î–∫—Ç –ø–æ—Ç–æ—á–Ω–æ—ó –ø–æ–¥—ñ—ó.
        - –í–∏–∫–ª–∏–∫–∞—î –∑–æ–≤–Ω—ñ—à–Ω—é —Ñ—É–Ω–∫—Ü—ñ—é `delete_event` –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ–¥—ñ—ó –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö.
        - –í—ñ–¥–ø—Ä–∞–≤–ª—è—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–¥–∞–ª–µ–Ω–Ω—è.
    """
    query = update.callback_query
    await query.answer()

    index = context.user_data.get('event_index')
    events = context.user_data.get('events')

    message = await delete_event(events[index].title)
    await query.message.reply_text(message)

    user = await get_user_profile(query.from_user.id)
    events = await get_events_created_by_user(user)
    context.user_data['events'] = events
    
    
    if events:
        await show_events(update, context, events[0], 0)
    else:
         await query.message.reply_text("–£ –≤–∞—Å –±—ñ–ª—å—à–µ –Ω–µ–º–∞—î —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö –ø–æ–¥—ñ–π.")


async def choose_category(update:Update, context:ContextTypes.DEFAULT_TYPE):
    """–í—ñ–¥–æ–±—Ä–∞–∂–∞—î —Å–ø–∏—Å–æ–∫ —É—Å—ñ—Ö –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π —É –≤–∏–≥–ª—è–¥—ñ —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
    Args:
        update (Update):–û–±'—î–∫—Ç –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥ Telegram, —â–æ –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.
        context (ContextTypes.DEFAULT_TYPE): –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞, —â–æ –¥–æ–∑–≤–æ–ª—è—î –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π —Ç–∞ –¥–∞–Ω–∏—Ö.
    Side Effects:
        - –í–∏–∫–ª–∏–∫–∞—î –∑–æ–≤–Ω—ñ—à–Ω—é —Ñ—É–Ω–∫—Ü—ñ—é `get_all_categories` –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –∫–∞—Ç–µ–≥–æ—Ä—ñ–π.
        - –°—Ç–≤–æ—Ä—é—î —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–æ–∂–Ω–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó.
        - –í—ñ–¥–ø—Ä–∞–≤–ª—è—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ "–í–∏–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é:" –∑ —Ü–∏–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏.
    """
    categories = await get_all_categories()

    keyboard = [InlineKeyboardButton(cat.name, callback_data=f"category:{cat.name}") for cat in categories]
    reply_markup = InlineKeyboardMarkup([keyboard])
    await update.message.reply_text("–í–∏–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é:", reply_markup=reply_markup)

async def filter_events_by_category(update:Update, context:ContextTypes.DEFAULT_TYPE):
    """–§—ñ–ª—å—Ç—Ä—É—î –ø–æ–¥—ñ—ó –∑–∞ –æ–±—Ä–∞–Ω–æ—é –∫–∞—Ç–µ–≥–æ—Ä—ñ—î—é —Ç–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î —ó—Ö.
    Args:
        update (Update):–û–±'—î–∫—Ç –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥ Telegram, —â–æ –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.
        context (ContextTypes.DEFAULT_TYPE): –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞, —â–æ –¥–æ–∑–≤–æ–ª—è—î –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π —Ç–∞ –¥–∞–Ω–∏—Ö.
    Side Effects:
        - –í–∏—Ç—è–≥—É—î –Ω–∞–∑–≤—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –∑ `callback_data`.
        - –í–∏–∫–ª–∏–∫–∞—î –∑–æ–≤–Ω—ñ—à–Ω—é —Ñ—É–Ω–∫—Ü—ñ—é `get_event_by_category` –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–∏—Ö –ø–æ–¥—ñ–π.
        - –Ø–∫—â–æ –≤—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–∏—Ö –ø–æ–¥—ñ–π –Ω–µ–º–∞—î, –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è "–ü–æ–¥—ñ–π –ø–æ–∫–∏ –Ω–µ–º–∞".
        - –í–∏–∫–ª–∏–∫–∞—î `show_events` –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–µ—Ä—à–æ—ó –≤—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–æ—ó –ø–æ–¥—ñ—ó.
    """
    query = update.callback_query
    await query.answer()

    events = await get_event_by_category(query.data.split(":")[1])

    if not events:
        await query.message.reply_text("–ü–æ–¥—ñ–π –ø–æ–∫–∏ –Ω–µ–º–∞")
        return

    context.user_data['events'] = events
    context.user_data['event_index'] = 0 

    await show_events(update, context, events[0], 0)
